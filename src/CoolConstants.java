/* Generated By:JavaCC: Do not edit this line. CoolConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CoolConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASSE = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int FALSE = 12;
  /** RegularExpression Id. */
  int FI = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int IN = 15;
  /** RegularExpression Id. */
  int INHERITS = 16;
  /** RegularExpression Id. */
  int ISVOID = 17;
  /** RegularExpression Id. */
  int LET = 18;
  /** RegularExpression Id. */
  int LOOP = 19;
  /** RegularExpression Id. */
  int POOL = 20;
  /** RegularExpression Id. */
  int THEN = 21;
  /** RegularExpression Id. */
  int WHILE = 22;
  /** RegularExpression Id. */
  int CASE = 23;
  /** RegularExpression Id. */
  int ESAC = 24;
  /** RegularExpression Id. */
  int SCASE = 25;
  /** RegularExpression Id. */
  int NEW = 26;
  /** RegularExpression Id. */
  int OF = 27;
  /** RegularExpression Id. */
  int NOT = 28;
  /** RegularExpression Id. */
  int TRUE = 29;
  /** RegularExpression Id. */
  int INT = 30;
  /** RegularExpression Id. */
  int STRING = 31;
  /** RegularExpression Id. */
  int BOOL = 32;
  /** RegularExpression Id. */
  int NUMERO = 33;
  /** RegularExpression Id. */
  int TIPO = 34;
  /** RegularExpression Id. */
  int ID = 35;
  /** RegularExpression Id. */
  int SOMA = 36;
  /** RegularExpression Id. */
  int SUBTRAI = 37;
  /** RegularExpression Id. */
  int MULTIPLICA = 38;
  /** RegularExpression Id. */
  int DIVIDE = 39;
  /** RegularExpression Id. */
  int ATRIB = 40;
  /** RegularExpression Id. */
  int MENOR = 41;
  /** RegularExpression Id. */
  int MENORIGUAL = 42;
  /** RegularExpression Id. */
  int IGUAL = 43;
  /** RegularExpression Id. */
  int COMPLEMENTO = 44;
  /** RegularExpression Id. */
  int APARENTESES = 45;
  /** RegularExpression Id. */
  int FPARENTESES = 46;
  /** RegularExpression Id. */
  int ACHAVES = 47;
  /** RegularExpression Id. */
  int FCHAVES = 48;
  /** RegularExpression Id. */
  int PONTO = 49;
  /** RegularExpression Id. */
  int ARROBA = 50;
  /** RegularExpression Id. */
  int PVIRGULA = 51;
  /** RegularExpression Id. */
  int DOISPONTOS = 52;
  /** RegularExpression Id. */
  int VIRGULA = 53;
  /** RegularExpression Id. */
  int ASPAS = 54;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ML_COMMENT_STATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "\"(*\"",
    "\"\\\\\"",
    "\"*)\"",
    "<token of kind 9>",
    "\"class\"",
    "\"else\"",
    "\"false\"",
    "\"fi\"",
    "\"if\"",
    "\"in\"",
    "\"inherits\"",
    "\"isvoid\"",
    "\"let\"",
    "\"loop\"",
    "\"pool\"",
    "\"then\"",
    "\"while\"",
    "\"case\"",
    "\"esac\"",
    "\">=\"",
    "\"new\"",
    "\"of\"",
    "\"not\"",
    "\"true\"",
    "\"Int\"",
    "\"String\"",
    "\"Bool\"",
    "<NUMERO>",
    "<TIPO>",
    "<ID>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<-\"",
    "\"<\"",
    "\"<=\"",
    "\"=\"",
    "\"~\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\".\"",
    "\"@\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"\\\"\"",
  };

}
